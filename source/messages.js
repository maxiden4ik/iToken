import { fmt, bold, code, link } from 'telegraf/format';

export function main_message(token, transaction) { return fmt`
ðŸ’¡ ${bold`Contract deployed`}

${bold`${token.name} (${token.symbol})`}
â€¢ Address: ${code`${token.address}`}
â€¢ Creator: ${code`${transaction.from}`}

Total Supply: ${bold`${Math.round(token.totalSupply / 10**token.decimals).toLocaleString('de')}`} (+ ${token.decimals} dec)
`}



export function source_code_verify_message(token) { 
const urlEtherScanCode = `https://etherscan.io/token/${token.address}#code`;

return fmt`
${bold`ðŸ”Ž  Source code verified`}

${bold`${token.name} (${token.symbol})`}
â€¢ Address: ${code`${token.address}`}

${link('Etherscan', urlEtherScanCode)} ${token?.website ? 'â€¢ ' : ''}${token?.website ? link('Website', token.website) : ''}${token?.telegram ? ' â€¢ ' : ''}${token?.telegram ? link('Telegram', token.telegram) : ''}${token?.twitter ? ' â€¢ ' : ''}${token?.twitter ? link('Twitter', token.twitter) : ''}
`}



export function token_launching_message(token) {
const urlEtherScanCode = `https://etherscan.io/token/${token.address}#code`;

return fmt`
${bold`ðŸš€ Launching`}

${bold`${token.name} (${token.symbol})`}
â€¢ Address: ${code`${token.address}`}
â€¢ Pair: ${code`${token.pair}`}

${link('Etherscan', urlEtherScanCode)}
`}



export function lock_burn_liqudity_message(token) {
const urlEtherScanCode = `https://etherscan.io/token/${token.address}#code`;
    
return fmt`
${bold`${token.lpLocker[0] == 'dead' ? 'ðŸ”¥ Liquidity Burned' : 'ðŸ”’ Liquidity Locked'}`}
    
${bold`${token.name} (${token.symbol})`}
â€¢ Address: ${code`${token.address}`}
â€¢ Pair: ${code`${token.pair}`}
${token.lpLocker[0] != 'dead' ? `â€¢ ${token.lpLocker[0]} - ${token.lpLocker[1]}\n` : ''}
${link('Etherscan', urlEtherScanCode)}
`}